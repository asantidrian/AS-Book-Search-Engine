{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/eddie/trilogy/AS-Book-Search-Engine/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/eddie/trilogy/AS-Book-Search-Engine/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/eddie/trilogy/AS-Book-Search-Engine/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{Jumbotron,Container,CardColumns,Card,Button}from'react-bootstrap';import{useQuery,useMutation}from\"@apollo/client\";import{REMOVE_BOOK}from\"../utils/mutations\";import{GET_ME}from\"../utils/queries\";import Auth from'../utils/auth';import{removeBookId}from'../utils/localStorage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SavedBooks=function SavedBooks(){var _useQuery=useQuery(GET_ME),loading=_useQuery.loading,data=_useQuery.data;var _useMutation=useMutation(REMOVE_BOOK),_useMutation2=_slicedToArray(_useMutation,1),removeBook=_useMutation2[0];// create function that accepts the book's mongo _id value as param and deletes the book from the database\nvar handleDeleteBook=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(bookId){var token;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=Auth.loggedIn()?Auth.getToken():null;if(token){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:_context.prev=3;_context.next=6;return removeBook({variables:{bookId:bookId}});case 6:// if (!response.ok) {\n//   throw new Error('something went wrong!');\n// }\n// upon success, remove book's id from localStorage\nremoveBookId(bookId);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](3);console.error(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[3,9]]);}));return function handleDeleteBook(_x){return _ref.apply(this,arguments);};}();// if data isn't here yet, say so\nif(loading){return/*#__PURE__*/_jsx(\"h2\",{children:\"LOADING...\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Jumbotron,{fluid:true,className:\"text-light bg-dark\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Viewing saved books!\"})})}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:data.me.bookCount>0?\"Viewing \".concat(data.me.bookCount,\" saved \").concat(data.me.bookCount===1?'book':'books',\":\"):'You have no saved books!'}),/*#__PURE__*/_jsx(CardColumns,{children:data.me.savedBooks.map(function(book){return/*#__PURE__*/_jsxs(Card,{border:\"dark\",children:[book.image?/*#__PURE__*/_jsx(Card.Img,{src:book.image,alt:\"The cover for \".concat(book.title),variant:\"top\"}):null,/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:book.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"small\",children:[\"Authors: \",book.authors]}),/*#__PURE__*/_jsx(Card.Text,{children:book.description}),/*#__PURE__*/_jsx(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteBook(book.bookId);},children:\"Delete this Book!\"})]})]},book.bookId);})})]})]});};export default SavedBooks;","map":{"version":3,"names":["React","Jumbotron","Container","CardColumns","Card","Button","useQuery","useMutation","REMOVE_BOOK","GET_ME","Auth","removeBookId","SavedBooks","loading","data","removeBook","handleDeleteBook","bookId","token","loggedIn","getToken","variables","console","error","me","bookCount","savedBooks","map","book","image","title","authors","description"],"sources":["C:/Users/eddie/trilogy/AS-Book-Search-Engine/client/src/pages/SavedBooks.js"],"sourcesContent":["import React from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\nimport { GET_ME } from \"../utils/queries\";\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const [removeBook] = useMutation(REMOVE_BOOK);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      // const response = \n      await removeBook({ variables: { bookId } });\n\n      // if (!response.ok) {\n      //   throw new Error('something went wrong!');\n      // }\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {data.me.bookCount > 0\n            ? `Viewing ${data.me.bookCount} saved ${data.me.bookCount === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {data.me.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"],"mappings":"2aAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,SAApB,CAA+BC,WAA/B,CAA4CC,IAA5C,CAAkDC,MAAlD,KAAgE,iBAAhE,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,gBAAtC,CACA,OAASC,WAAT,KAA4B,oBAA5B,CACA,OAASC,MAAT,KAAuB,kBAAvB,CACA,MAAOC,KAAP,KAAiB,eAAjB,CACA,OAASC,YAAT,KAA6B,uBAA7B,C,6IAEA,GAAMC,WAAU,CAAG,QAAbA,WAAa,EAAM,CACvB,cAA0BN,QAAQ,CAACG,MAAD,CAAlC,CAAQI,OAAR,WAAQA,OAAR,CAAiBC,IAAjB,WAAiBA,IAAjB,CACA,iBAAqBP,WAAW,CAACC,WAAD,CAAhC,8CAAOO,UAAP,kBAEA;AACA,GAAMC,iBAAgB,4FAAG,iBAAOC,MAAP,8HACjBC,KADiB,CACTR,IAAI,CAACS,QAAL,GAAkBT,IAAI,CAACU,QAAL,EAAlB,CAAoC,IAD3B,IAGlBF,KAHkB,yDAId,KAJc,+CASfH,WAAU,CAAC,CAAEM,SAAS,CAAE,CAAEJ,MAAM,CAANA,MAAF,CAAb,CAAD,CATK,QAWrB;AACA;AACA;AAEA;AACAN,YAAY,CAACM,MAAD,CAAZ,CAhBqB,+EAkBrBK,OAAO,CAACC,KAAR,cAlBqB,oEAAH,kBAAhBP,iBAAgB,4CAAtB,CAsBA;AACA,GAAIH,OAAJ,CAAa,CACX,mBAAO,kCAAP,CACD,CAED,mBACE,wCACE,KAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,SAAS,CAAC,oBAA3B,uBACE,KAAC,SAAD,wBACE,4CADF,EADF,EADF,cAME,MAAC,SAAD,yBACE,oBACGC,IAAI,CAACU,EAAL,CAAQC,SAAR,CAAoB,CAApB,mBACcX,IAAI,CAACU,EAAL,CAAQC,SADtB,mBACyCX,IAAI,CAACU,EAAL,CAAQC,SAAR,GAAsB,CAAtB,CAA0B,MAA1B,CAAmC,OAD5E,MAEG,0BAHN,EADF,cAME,KAAC,WAAD,WACGX,IAAI,CAACU,EAAL,CAAQE,UAAR,CAAmBC,GAAnB,CAAuB,SAACC,IAAD,CAAU,CAChC,mBACE,MAAC,IAAD,EAAwB,MAAM,CAAC,MAA/B,WACGA,IAAI,CAACC,KAAL,cAAa,KAAC,IAAD,CAAM,GAAN,EAAU,GAAG,CAAED,IAAI,CAACC,KAApB,CAA2B,GAAG,yBAAmBD,IAAI,CAACE,KAAxB,CAA9B,CAA+D,OAAO,CAAC,KAAvE,EAAb,CAA+F,IADlG,cAEE,MAAC,IAAD,CAAM,IAAN,yBACE,KAAC,IAAD,CAAM,KAAN,WAAaF,IAAI,CAACE,KAAlB,EADF,cAEE,WAAG,SAAS,CAAC,OAAb,uBAA+BF,IAAI,CAACG,OAApC,GAFF,cAGE,KAAC,IAAD,CAAM,IAAN,WAAYH,IAAI,CAACI,WAAjB,EAHF,cAIE,KAAC,MAAD,EAAQ,SAAS,CAAC,sBAAlB,CAAyC,OAAO,CAAE,yBAAMhB,iBAAgB,CAACY,IAAI,CAACX,MAAN,CAAtB,EAAlD,+BAJF,GAFF,GAAWW,IAAI,CAACX,MAAhB,CADF,CAaD,CAdA,CADH,EANF,GANF,GADF,CAiCD,CAjED,CAmEA,cAAeL,WAAf"},"metadata":{},"sourceType":"module"}